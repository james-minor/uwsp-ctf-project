---
import '../styles/global.css';
import * as feather from 'feather-icons';

interface Props
{
	name: string;
	type: 'text' | 'password';
	minLength?: number;
	maxLength?: number;
	icon?: feather.FeatherIcon;
	iconOptions?: Partial<feather.FeatherAttributes>;
	error?: string;
}

const 
{
	name,
	type,
	minLength,
	maxLength,
	icon,
	iconOptions,
	error,
} = Astro.props;
---

<div class="field-container">
	<label class="sr-only" for={ name }>{ name }</label>
	<div class="field">
		{
			(icon && iconOptions) && <div class="field__icon" set:html={ icon.toSvg(iconOptions) } />
		}
		<input
				class="field__control"
				type={ type }
				id={ name }
				name={ name }
				placeholder={ name.charAt(0).toUpperCase() + name.slice(1) }
				maxlength={ maxLength }
		/>
	</div>
	<span class="field__error" id={ `${name}-error` }>{ error }</span>
</div>

<script define:vars={{ name, minLength, maxLength }}>
	let errorElement = document.getElementById(`${name}-error`);
	let formattedFieldName = name.charAt(0).toUpperCase() + name.slice(1);

	document.getElementById(name).addEventListener('input', event =>
	{
		let value = event.target.value;

		if (minLength && value.length < parseInt(minLength))
		{
			errorElement.innerText = `${formattedFieldName} must be at least ${minLength} characters`;
			return;
		}

		if (maxLength && value.length > parseInt(maxLength))
		{
			errorElement.innerText = `${formattedFieldName} must be less than ${maxLength} characters`;
			return;
		}

		errorElement.innerText = '';
	});
</script>

<style>
	.field-container {
		margin-top: 0.5rem;
		margin-bottom: 0.5rem;
		margin-left: 7%;
		margin-right: 7%;
	}
	
	.field {
        display: grid;
        grid-template-columns: auto 1fr;
        grid-template-rows: 1fr;

        border: thin solid black;
	}

    .field:focus-within {
        border-color: var(--col-accent-violet-nt);
        outline: var(--col-accent-violet-nt) solid 2px;
    }

    .field__icon {
        background-color: var(--col-main-purple);
        padding: 0.5rem;

        aspect-ratio: 1;

        display: flex;
        align-items: center;
        justify-content: center;
    }

    .field__control {
        outline: none;
        border: none;
    }

    .field__error {
		display: block;

        color: var(--col-accent-red);
        height: 0.75rem;
        font-size: 0.75rem;

        margin-top: 0.2rem;
        margin-bottom: 1rem;
    }
</style>